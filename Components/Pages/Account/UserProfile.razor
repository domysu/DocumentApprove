@page "/account/{userId:int}"
@using DokumentuTvirtinimoSistema.Models
@using DokumentuTvirtinimoSistema.Services
@using Microsoft.AspNetCore.Components.Authorization;
@using DokumentuTvirtinimoSistema.Interfaces
@using Microsoft.AspNetCore.Authentication
@using System.Security.Claims
@inject IUser UserService
@inject CustomAuthenticationStateProvider CustomAuth

<EditForm Model="@users" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <input id="username" class="form-control-plaintext" @bind-value="users.Username" />
    </div>
    <div class="form-group">
        <input type="email" class="form-control" @bind-value="users.Email" />
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    [Parameter]
    public int userId { get; set; }
    string? currentUser;
    string? currentEmail;
    User users = new User();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    private async Task LoadData()
    {
        var currentUserObj = await CustomAuth.GetCurrentUser();

        if (currentUserObj?.Identity != null)
        {
            currentUser = currentUserObj.Identity.Name;
        }

        var getcurrentuser = await UserService.GetUserByIdAsync(userId);
        if(getcurrentuser != null)
        {
            currentEmail = getcurrentuser.Email;
        }
        

        StateHasChanged();
    }
    public async Task HandleValidSubmit()
    {
       
    }
}
