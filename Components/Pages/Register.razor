@page "/register"
@using DokumentuTvirtinimoSistema.Interfaces;
@using DokumentuTvirtinimoSistema.Services;
@using DokumentuTvirtinimoSistema.Models;


@inject IUser UserService

@inject NavigationManager NavigationManager
@rendermode InteractiveServer
<h3>Register</h3>
<EditForm Model="@newUser" OnValidSubmit="HandleValidSubmit" FormName="Register">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" class="form-control" @bind-Value="newUser.Username" placeholder="Enter username" />
    </div>

    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" class="form-control" @bind-Value="newUser.Email" placeholder="Enter email" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="password" placeholder="Enter password" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Register</button>
</EditForm>




@code {
    private string password = "";
    private User newUser; 

    protected override void OnInitialized()
    {
        
        newUser = new User { DepartmentId = 1, RoleID = 2 }; // Assigning user to default department
    }

    public async Task HandleValidSubmit()
    {
        Console.WriteLine("Inserting email: " + newUser.Email);
        var userCreated = await UserService.AddUserAsync(newUser, password);
        if(userCreated != null)
        {
          
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }


    }

}
