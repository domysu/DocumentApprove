@page "/auditlog"
@using DokumentuTvirtinimoSistema.Interfaces
@using DokumentuTvirtinimoSistema.Services
@using DokumentuTvirtinimoSistema.Models

@inject AuditService AuditService

<div>
    @if (AuditLog != null)
    {

        @foreach(var auditlog in AuditLog)
        {
        <p><strong>Document ID:</strong> @auditlog.AuditDocumentId</p>
        <p><strong>Status:</strong> @auditlog.AuditStatus</p>
        <p><strong>Status Edit Time:</strong> @auditlog.AuditTimestamp</p>
        }
    }
    else
    {
        <span class="text-danger">@errorMessage</span>
    }
</div>

@code {

    string errorMessage = "Unexpected error has occurred";
    private List<AuditLogs> AuditLog = new List<AuditLogs>();

    protected override async Task OnInitializedAsync()
    {
        AuditLog = await AuditService.GetAuditLogsAsync();

        if (AuditLog == null)
        {
            errorMessage = "Cannot fetch logs!";
        }
        else
        {
            errorMessage = "Error!";
        }
    }
}
