@page "/auditlog"
@using DokumentuTvirtinimoSistema.Interfaces
@using DokumentuTvirtinimoSistema.Services
@using DokumentuTvirtinimoSistema.Models

@inject AuditService AuditService



   
@if(AuditLog != null)
{
<table class="table">
    <thead>
    <tr>
        <th>DocumentID</th>
        <th>Status</th>
        <th>EditedAt</th>
    </tr>
        </thead>
        <tbody>

        
            @foreach (var auditlog in AuditLog)
            {
                <tr>
                <td>@auditlog.AuditDocumentId</td>
                <td>@auditlog.AuditStatus</td>
                <td>@auditlog.AuditTimestamp</td>
                </tr>
            }
        
    </tbody>
</table>
 }
else
{
    <span class="text-danger">@errorMessage</span>
}

@code {

    string errorMessage = "Unexpected error has occurred";
    private List<AuditLogs> AuditLog = new List<AuditLogs>();

    protected override async Task OnInitializedAsync()
    {
        AuditLog = await AuditService.GetAuditLogsAsync();

        if (AuditLog == null)
        {
            errorMessage = "Cannot fetch logs!";
        }
        else
        {
            errorMessage = "Error!";
        }
    }
}
